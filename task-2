import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
data = pd.read_csv(r'C:\Users\Sri Vidya\Downloads\salary_data.csv')
print(data.head())
X = data[['YearsExperience']]  
Y = data['Salary']           
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, Y_train)
Y_pred = model.predict(X_test)
mse = mean_squared_error(Y_test, Y_pred)
r2 = r2_score(Y_test, Y_pred)
print(f'Mean Squared Error (MSE): {mse}')
print(f'R-squared Score: {r2}')
plt.figure(figsize=(8, 6))
plt.scatter(X_train, Y_train, color='blue', label='Training Data')
plt.plot(X_train, model.predict(X_train), color='red', linewidth=2, label='Regression Line')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Training Data and Regression Line')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
plt.scatter(X_test, Y_test, color='green', label='Actual Values')
plt.scatter(X_test, Y_pred, color='red', marker='x', label='Predicted Values')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Actual vs Predicted Values (Test Set)')
plt.legend()
plt.show()
